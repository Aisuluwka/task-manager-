# Используем официальный образ FrankenPHP builder с PHP 8.2
FROM dunglas/frankenphp:1.1-builder-php8.2.16

# Переменная окружения для сервера (опционально)
ENV SERVER_NAME="localhost"

# Обновляем пакеты и ставим зависимости включая apt-utils, чтобы убрать предупреждение
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        apt-utils \
        git \
        unzip \
        librabbitmq-dev \
        libpq-dev \
        supervisor \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Устанавливаем расширения PHP
RUN install-php-extensions \
    gd \
    pcntl \
    opcache \
    pdo \
    pdo_mysql \
    redis \
    sockets

# Копируем composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Рабочая директория
WORKDIR /var/www/html

# Копируем проект
COPY . .

# Установка зависимостей Laravel (оставляем dev-зависимости для локальной среды)
RUN composer install --no-interaction --prefer-dist

# Копируем настройки PHP и supervisor
COPY .docker/php/php.ini /usr/local/etc/php/php.ini
COPY .docker/etc/supervisor.d/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Установка и активация Xdebug (опционально, если не нужен — можно убрать)
RUN pecl install xdebug && docker-php-ext-enable xdebug || true

# Назначаем права для Laravel
RUN chown -R www-data:www-data storage bootstrap/cache

# Проброс портов
EXPOSE 8000 443

# Запускаем supervisor, который управляет процессами (в том числе Laravel Octane)
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
